<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2019, California Institute of Technology ("Caltech").
  U.S. Government sponsorship acknowledged.
  
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
  
  * Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
  * Redistributions must reproduce the above copyright notice, this list of
  conditions and the following disclaimer in the documentation and/or other
  materials provided with the distribution.
  * Neither the name of Caltech nor its operating division, the Jet Propulsion
  Laboratory, nor the names of its contributors may be used to endorse or
  promote products derived from this software without specific prior written
  permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
-->

<document>
<properties>
  <title>The Registry API Service Cloud Architecture</title>
</properties>

<body>
<section name="On-Prem vs. Cloud Architecture">
<p>
In a typical on-premise deployment, the Registry API Service is composed of
a ReSTful API Server which queries Elasticsearch indices in response to 
user-submitted search requests - both components of which are highlighted 
below in the diagram taken from <a href="../index.html">About PDS Registry</a>. 
</p>

<img src="../images/registry-onprem.png" style="width:50em;" />

<p>
Given the stateless nature of the API service, scaling is a matter of placing
a load balancer in front of a number of dedicated hosts which run copies of 
the service. While relatively minor in complexity, this strategy nonetheless
constitutes a significant administrative overhead and potentially wastes
resources that must be running in anticipation of peak loads that run largely
idle for the remaining time. These issues are addressed by two of the key 
advantages of cloud deployments.
</p>

<p>
The API service's cloud architecture is given in the diagram below. While
seemingly more complex than an on-prem deployment, the utilization of
AWS services simplifies administration, streamlines scaling with little 
idle resources and better secures management of sensitive data such
as Elasticsearch credentials.
</p>

<img src="../images/registry_cloud.png" style="width:50em;" />

<p>
The centerpiece of the cloud architecture is the use of AWS Fargate, a
flavor of the Elastic Container Service (ECS) which supports the execution 
of containerized applications (tasks) without requiring explicit 
provisioning of compute resources. The images for these application 
containers are placed in and pulled from the Elastic Container Registry 
(ECR). Each service instance connects to Elasticsearch, with the
necessary credentials injected into each container by the Secrets
Manager. Other non-sensitive run-time configuration is provided by the
Systems Manager Parameter Store.
</p>

<p>
Amazon's content delivery network, Cloudfront, is placed in front of
the Elastic Load Balancer (ELB). Cloudfront provides high-speed, low-latency
access while also ensuring unintention or malicious bulk downloading
of data is avoided. 
</p>

<p>
The processing of data by Harvest and push to Elasticsearch by the
Registry-manager are still performed on-premise, the latter connecting
directly to Elasticsearch, access to which is controlled by authentication
and IP whitelisting.
</p>

<!-- ============================================================== -->

<subsection name="EN's Centralized Registry API Service">
<p>
The Engineering Node's Registry API Service is the central point from
which received search requests are disseminated to all discipline nodes 
(DNs) to provide aggregated, global results. This strategy leverages
Elasticsearch's cross-cluster search (CCS) capability in which the
central instance (i.e. EN's) forwards queries to all instances which have
been designated as remotes. See figure below.
</p>

<img src="../images/registry_cloud_ccs.png" style="width:50em;" />

<p>
Requests can be directed to a particular DN's Registry API Service by
specifying the DN's abbreviated name (e.g. 'GEO') as the value of the
HTTP header 'x-request-node' along with the request. If this header is
not specified, the request is routed to the EN registry.
</p>

</subsection>

</section>

</body>

</document>
