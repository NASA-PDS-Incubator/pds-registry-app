<?xml version="1.0" encoding="UTF-8"?>

<document>
<properties>
  <title>Registry Customization</title>
</properties>

<body>

<section name="Registry Customization">


<p>
<ul>
  <li><a href="#Overview">Overview</a></li>
  <li><a href="#DD">Data Dictionary</a></li>
  <li><a href="#SchemaUpdate">Registry Schema Update</a></li>
</ul>
</p>

<!-- ========================================================== -->

<subsection name="Overview" id="Overview">

<p>
Registry uses following Elasticsearch indices:
</p>

<ul>
<li><b>registry</b> - this index stores metadata extracted from PDS4 labels, one ES document per PDS label.</li>
<li><b>registry-dd</b> - this index stores data dictionary - a list of searchable fields and its data types.
When registry is created, the data dictionary is populated with fields (attributes) from PDS common and few discipline dictionaries.
You can add more fields as described in <a href="reg-custom.html#DD">Data Dictionary</a> section.</li>
<li><b>registry-refs</b> - this index stores product references extracted from collection inventory files.
There could be 1 or more ES documents per inventory file.</li>
</ul>

<p>
Default Elasticsearch schemas for these indices (<i>registry.json</i>, <i>data-dic.json</i>, and <i>refs.json</i>) 
are located in <i>REGISTRY_HOME/elastic/</i> directory.
Where <i>REGISTRY_HOME</i> is a directory where you installed Registry Manager, for example
<i>/home/pds/registry</i>.
</p>

<p>
Default registry schema defines few common fields such as lid, vid, title, internal refrences and basic file information.
Also, there is a binary field to store the whole PDS label as a BLOB. Lidvid is a primary key.
</p>

<p>
Dynamic field mapping is disabled to prevent creation of fields not in the data dictionary.
</p>
<source>
...
"mappings": {
    "dynamic": false, 
...
}
</source>

<p>
After running Harvest, the output folder (default is /tmp/harvest/out/) will have several files
<ul>
<li><i>registry-docs.json</i> - metadata extracted from PDS4 labels, stored in Newline-delimited JSON (NJSON) format.</li>
<li><i>refs-docs.json</i> - product references extracted from collection inventory files.</li>
<li><i>missing_fields.txt</i> - a list of field names extracted from PDS4 labels to be added to the Registry.</li>
<li><i>missing_xsds.txt</i> - a list of XSDs corresponding to fields listed in <i>missing_fields.txt</i> file.</li>
</ul>
</p>

<p>
When you load data
</p>

<source>
registry-manager load-data -dir /home/pds/harvest/out/
</source>

<p>
Registry Manager will try loading LDDs (JSON formatted data dictionaries) listed in <i>missing_xsds.txt</i> file and 
adding fields listed in <i>missing_fields.txt</i> file.

You might get the following error if a field is not in the data dictinary.
</p>
<source>
[ERROR] Could not find datatype for field '...'
</source>

<p>
You should try fixing the errors by updating data dictionary as described in the following section.
</p>

<p>
You can also pass <i>-force</i> parameter to create missing fields with "keyword" (string) datatype.
</p>

<source>
registry-manager load-data -dir /home/pds/harvest/out -force
</source>

<p>
It is possible to disable schema update completely (not recommended).
</p>

<source>
registry-manager load-data -dir /home/pds/harvest/out -updateSchema n
</source>

<p>
If you disable schema update, fields not in Elasticsearch schema are not indexed, 
but they are still available in "_source" field.
</p>

<p>
Next section describes how to manage registry data dictionary.
</p>
</subsection>

<!-- ========================================================== -->

<subsection name="Data Dictionary" id="DD">

<p>
When a registry is created, the data dictionary is populated with fields (attributes) from 
PDS common and few discipline dictionaries.
Latest versions of PDS4 data dictionaries in different formates are available at 
<a href="https://pds.nasa.gov/datastandards/dictionaries/" target="_blank">PDS website</a>.
</p>

<p>
The following naming convention is used for Elasticsearch fields:
</p>
<source>
namespace:Class_Name/namespace:attribute_name
</source>

<p>
For example,
</p>
<source>
disp:Display_Direction/disp:vertical_display_direction
geom:Articulation_Device_Parameters/geom:device_id
pds:XML_Schema/pds:name
proc:Software_Program/proc:name
</source>

<h4>Listing Installed Data Dictionaries</h4>
<p>To list all data dictionaries in the Registry run the following command:</p>

<source>
registry-manager list-dd
</source>

<source>
Namespace            File                                        Version   Date
-----------------------------------------------------------------------------------------------
cart                 PDS4_CART_1F00_1950.JSON                   1.15.0.0   2020-12-21T21:48:19Z
disp                 PDS4_DISP_1F00_1500.JSON                   1.15.0.0   2020-12-15T22:09:58Z
geom                 PDS4_GEOM_1F00_1910.JSON                   1.15.0.0   2021-01-12T00:37:40Z
img                  PDS4_IMG_1F00_1810.JSON                    1.15.0.0   2020-10-14T02:55:04Z
img_surface          PDS4_IMG_SURFACE_1F00_1240.JSON            1.15.0.0   2021-01-12T00:56:39Z
msn                  PDS4_MSN_1F00_1300.JSON                    1.15.0.0   2020-10-14T02:55:21Z
msn_surface          PDS4_MSN_SURFACE_1F00_1200.JSON            1.15.0.0   2020-10-14T02:55:29Z
particle             PDS4_PARTICLE_1G00_2010.JSON               1.16.0.0   2021-08-05T21:40:47Z
pds                  PDS4_PDS_1F00.JSON                         1.15.0.0   2020-12-23T15:16:28Z
proc                 PDS4_PROC_1F00_1210.JSON                   1.15.0.0   2020-12-09T03:22:22Z
rings                PDS4_RINGS_1F00_1A00.JSON                  1.15.0.0   2020-12-02T19:08:01Z
sp                   PDS4_SP_1F00_1300.JSON                     1.15.0.0   2020-11-03T19:47:46Z
</source>


<h4>Loading Data Dictionaries</h4>
<p>
You can load additional data dictionaries in following formats: 
<ul>
<li>Standard PDS4 data dictionary JSON file, for example, <i>orex_ldd_OREX_1300.JSON</i></li>
<li>Custom CSV file</li>
<li>Data dump created by 'export-dd' command (NJSON)</li>
</ul>
</p>

<p>
For example, to load standard PDS4 data dictionary, run the following command:
</p>
<source>
registry-manager load-dd -dd /home/pds/schema/orex_ldd_OREX_1300.JSON
</source>

<p>
Elasticsearch data dictionary schema has following fields.
<ul>
<li><i>class_ns</i> - class namespace, e.g., "pds"</li>
<li><i>class_name</i> - class name, e.g., "Element_Array"</li>
<li><i>attr_ns</i> - attribute namespace, e.g., "pds"</li>
<li><i>attr_name</i> - attribute name, e.g., "scaling_factor"</li>
<li><i>data_type</i> - PDS data type, e.g., "ASCII_Real"</li>
<li><i>description</i> - field description</li>
<li><i>es_field_name</i> - Elasticsearch field name, e.g., "pds/Element_Array/pds/scaling_factor"</li>
<li><i>es_data_type</i> - Elasticsearch data type, e.g., "double"</li>
</ul>
</p>

<p>
If you load standard PDS JSON data dictionary, all these fields are populated automatically.
If you use custom CSV file, "es_field_name" and "es_data_type" are required and other fields are optional.
The CSV file must have a header with data dictionary field names, for example,
</p>

<source>
es_field_name,es_data_type
my_namespace:My_Class/my_namespace:parameter_a,keyword
my_namespace:My_Class/my_namespace:parameter_b,integer
my_namespace:My_Class/my_namespace:parameter_c,double
</source>

<p>
To load custom CSV file, run the following command:
</p>
<source>
registry-manager load-dd -csv /home/pds/schema/my-fields.csv
</source>


<!-- ==================================================== -->

<h4>PDS to Elasticsearch Data Type Mapping</h4>

<p>
If you load standard PDS JSON data dictionary, PDS data types, such as <i>pds.ASCII_Real</i>
are automatically mapped to Elasticsearch data types, such as <i>double</i>.
The mappings are stored in <i>REGISTRY_HOME/elastic/data-dic-types.cfg</i> file.
You can modify this file, to add more mappings or change default values.
</p>

<p>
The file has the following format:
</p>
<source>
&lt;PDS data type&gt; = &lt;Elasticsearch data type&gt;
</source>

<p>
For example,
</p>

<source>
pds.ASCII_Integer = integer
pds.ASCII_Boolean = boolean
pds.ASCII_Real = double
pds.ASCII_Short_String_Collapsed = keyword
...
</source>

</subsection>

<!-- ==================================================== -->

<subsection name="Registry Schema Update" id="SchemaUpdate">

<p>
As described in Overview section, registry schema is updated automatically when you load data.
</p>

<p>
You can also update registry schema by calling <i>update-schema</i> command:
</p>

<source>
registry-manager update-schema -dir /tmp/harvest/out/
</source>
<p>
Where <i>-dir</i> parameter points to Harvest output directory with <i>missing_fields.txt</i> 
and <i>missing_xsds.txt</i> files.
</p>

</subsection>

</section>

</body>
</document>
