<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2019, California Institute of Technology ("Caltech").
  U.S. Government sponsorship acknowledged.
  
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
  
  * Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
  * Redistributions must reproduce the above copyright notice, this list of
  conditions and the following disclaimer in the documentation and/or other
  materials provided with the distribution.
  * Neither the name of Caltech nor its operating division, the Jet Propulsion
  Laboratory, nor the names of its contributors may be used to endorse or
  promote products derived from this software without specific prior written
  permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
-->

<document>
<properties>
  <title>Common Operations</title>
</properties>

<body>

<section name="Common Operations">

<p>
<ul>
  <li><a href="#Harvest">Extract Metadata (Harvest)</a></li>
  <li><a href="#CRUD">Create, Delete, Customize Registry</a></li>
  <li><a href="#Load">Load Metadata</a></li>
  <li><a href="#View">View, Search Metadata</a></li>
  <li><a href="#Delete">Delete Metadata</a></li>
  <li><a href="#Export">Export Metadata</a></li>
  <li><a href="#ExportBlob">Export files (BLOBs)</a></li>
</ul>
</p>

<!-- ======================================================== -->

<subsection name="Extract PDS4 Product Metadata" id="Harvest">
<p>
Run Harvest tool to crawl PDS4 products and extract metadata in JSON (NJSON) format.
In addition to some basic information, such as lid, vid, product class, internal references, 
file name and size, you can configure additional fields to export.
Optionally the whole PDS product labels can be stored as BLOBs (Binary Large OBjects).
</p>

<p>
After running Harvest, the output folder (default is /tmp/harvest/out/) will have several files
<ul>
<li><i>registry-docs.json</i> - metadata extracted from PDS4 labels, stored in Newline-delimited JSON (NJSON) format.</li>
<li><i>refs-docs.json</i> - product references extracted from collection inventory files.</li>
<li><i>fields.txt</i> - a list of field names extracted from PDS4 labels.</li>
<li><i>supplemental.txt</i> - a list of supplemental products (file paths).</li>
</ul>
</p>

<p>
See <a href="harvest.html">Harvest Documentation</a> for more information.
</p>
</subsection>

<!-- ======================================================== -->

<subsection name="Create, Delete, Customize Registry" id="CRUD">
<p>
You must create following registry indices in Elasticsearch, before loading data generated by Harvest tool.
</p>
<ul>
<li><b>registry</b> - this index stores metadata extracted from PDS4 labels, one ES document per PDS label.</li>
<li><b>registry-dd</b> - this index stores data dictionary - a list of searchable fields and its data types.
When registry is created, the data dictionary is populated with fields (attributes) from PDS common and few discipline dictionaries.
You can add more fields as described in <a href="reg-custom.html#DD">Registry Customization / Data Dictionary</a> section.</li>
<li><b>registry-refs</b> - this index stores product references extracted from collection inventory files.
There could be 1 or more ES documents per inventory file.</li>
</ul>

<h4>Create Registry</h4>

<p>
To create registry indices in local Elasticsearch (running at <i>http://localhost:9200</i>) 
with 1 shard and 0 replicas, run the following Registry Manager command
</p>
<source>
registry-manager create-registry
</source>

<p>
You can customize <i>create-registry</i> command by passing several parameters, 
such as Elasticsearch URL, number of shards and replicas, authentication parameters.
To see the list of available parameters and basic usage run
<source>
registry-manager create-registry -help
</source>
</p>

<p>
To check that registry indices were created open the following URL in 
a browser: <i>http://localhost:9200/_cat/indices?v</i> or use <i>curl</i>.
</p>
<source>
curl "http://localhost:9200/_cat/indices?v"
</source>

<p>
The response should look similar to this. Make sure that index status is "green". 
</p>
<source>
health status index         uuid                   pri rep docs.count docs.deleted store.size pri.store.size
green  open   registry      PY6ObzELRlSx9gHOWbR8dw   1   0          0            0       208b           208b
green  open   registry-dd   CuJ-nqg1SbKI9hejHrISWA   1   0       2505            0      625kb          625kb
green  open   registry-refs 1cJLc-9cQj2D_MAYo7gOpw   1   0          0            0       208b           208b
</source>

<!-- ============================ -->

<h4>Delete Registry</h4>

<p>
To delete registry indices from local Elasticsearch run the following command:
</p>
<source>
registry-manager delete-registry
</source>

<p>
You can customize <i>delete-registry</i> command by passing several parameters, 
such as Elasticsearch URL, and authentication parameters.
</p>

<!-- ============================ -->

<h4>Registry Customization</h4>
<p>
The main customization you would need to do is to update registry data dictionary of searchable fields and its datatypes.
More information about registry customization is available <a href="reg-custom.html">here</a>.
</p>
</subsection>

<!-- ======================================================== -->

<subsection name="Load Metadata" id="Load">
<p>
JSON files generated by Harvest, can be loaded into Elasticsearch 
by <a href="reg-manager.html">Registry Manager</a> as shown below. 
</p>
<source>
registry-manager load-data -dir /home/pds/harvest/out/
</source>

<h4>Automatic Schema Update and Common Errors</h4>
<p>
By default, registry manager will try updating registry schema (add more fields)
from <i>fields.txt</i> file (generated by Harvest) located in the same directory as <i>es-docs.json</i>.
</p>
<p>
You might see following error if you decide to copy <i>es-docs.json</i> file from Harvest output folder to another location
and forget to copy <i>fields.txt</i>.
</p>
<source>
[ERROR] /my-folder/fields.txt (The system cannot find the file specified)
</source>

<p>
When registry is created, the registry data dictionary is populated with field definitions (field name to data type mappings) 
from PDS common and few discipline dictionaries. If you try loading labels with fields not defined in the registry data dictionary,
you will get the following error:
</p>
<source>
[ERROR] Could not find datatype for field '...'
</source>
<p>
You have to update the registry data dictionary as described in <a href="reg-custom.html">Registry Customization</a> section
before you can load the data.
</p>
<p>
If you have non-standard registry configuration and know what you are doing, 
you can disable schema update by passing <i>updateSchema</i> parameter to <i>load-data</i> command.
</p>
<source>
registry-manager load-data -dir /home/pds/harvest/out/ -updateSchema n
</source>

<h4>Accidental Update of Existing Documents</h4>
<p>
Registry index uses lidvid as a primary key. 
If you load data with the same lidvids multiple times, old documents will be replaced by new documents.
We plan to implement additional check to prevent accidental update of existing documents in next release.
</p>

</subsection>

<!-- ============================================================= -->

<subsection name="View / Search Metadata" id="View">

<h4>Elasticsearch Search API</h4>

<p>
You can either use simple Lucene queries, passed in the URL:
</p>
<source>
curl "http://localhost:9200/registry/_search?q=product_class:Product_Collection&amp;pretty"
</source>

<p>
Or more advanced Elasticsearch queries defined in JSON and passed in request body:
</p>

<source>
curl -X GET "localhost:9200/registry/_search?pretty" -H 'Content-Type: application/json' -d'
{
  "query": {
    "term": {
      "product_class": "Product_Collection"
    }
  }
}
'
</source>

<p>
You can find more about Elasticsearch Search API at 
<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.8/search-search.html" target="_blank">Elasticsearch web site</a>.
</p>

</subsection>

<!-- ============================================================= -->

<subsection name="Delete Metadata" id="Delete">
<p>
You can use <a href="reg-manager.html">Registry Manager</a> tool to delete metadata 
by lidvid, lid, package id (Harvest run id), or to delete all data. Few examples are shown below.
<source>
registry-manager delete-data -lidvid urn:nasa:pds:context:target:asteroid.4_vesta::1.1
registry-manager delete-data -lid urn:nasa:pds:context:target:asteroid.4_vesta
registry-manager delete-data -packageId 8d8ae96d-044e-473d-a278-62635b1c5977
registry-manager delete-data -all
</source>
</p>

<p>
You can also use Elasticsearch 
<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.8/docs-delete-by-query.html" target="_blank">delete by query API</a>.
</p>
</subsection>

<!-- ============================================================= -->

<subsection name="Export Metadata" id="Export">
<p>
You can use <a href="reg-manager.html">Registry Manager</a> tool to export metadata 
by lidvid, package id (Harvest run id), or to export all data. Few examples are shown below.
</p>
<source>
registry-manager export-data -file /tmp/mydata.json -lidvid urn:nasa:pds:context:target:asteroid.4_vesta::1.1
registry-manager export-data -file /tmp/mydata.json -packageId 8d8ae96d-044e-473d-a278-62635b1c5977
registry-manager export-data -file /tmp/mydata.json -all
</source>

<p>
Data is saved in a Newline Delimited JSON file which can be loaded into Elasticsearch by 'load-data' command. 
The same file format is used by Harvest and Elasticsearch 
<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.8/docs-bulk.html" target="_blank">bulk API</a>.
</p>

</subsection>

<!-- ============================================================= -->

<subsection name="Export Files (BLOBs)" id="ExportBlob">
<p>
If PDS product label BLOBs (Binary Large OBjects) were generated by Harvest, they can be exported 
by <a href="reg-manager.html">Registry Manager</a> tool as shown below.
<source>
registry-manager export-file -lidvid urn:nasa:pds:context:target:asteroid.4_vesta::1.1 -file /tmp/4_vesta.xml
</source>
</p>

</subsection>

</section>

</body>
</document>
