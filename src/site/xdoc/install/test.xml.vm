<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2019, California Institute of Technology ("Caltech").
  U.S. Government sponsorship acknowledged.
  
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
  
  * Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
  * Redistributions must reproduce the above copyright notice, this list of
  conditions and the following disclaimer in the documentation and/or other
  materials provided with the distribution.
  * Neither the name of Caltech nor its operating division, the Jet Propulsion
  Laboratory, nor the names of its contributors may be used to endorse or
  promote products derived from this software without specific prior written
  permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
-->

<document>
  <properties>
    <title>Test Your Deployment</title>
  </properties>

<body>

<section name="Test Your Deployment">

<ul>
<li><a href="#overview">Overview</a></li>
<li><a href="#create">Create Registry</a></li>
<li><a href="#harvest">Extract metadata from PDS4 labels</a></li>
<li><a href="#load">Load harvested data into Registry (Elasticsearch)</a></li>
<li><a href="#query">Query Elasticsearch</a></li>
<li><a href="#api">Use Registry API</a></li>
</ul>

<!-- ======================================================== -->

<subsection id="overview" name="Overview">
This document describes common tasks to do with the Registry, such as initializing your Registry, 
extracting metadata from PDS4 labels and loading it into the Registry, querying Elasticsearch,
and using Registry APIs.
</subsection>

<!-- =================================================================== -->
	
<subsection id="create" name="Create Registry">

<p>
You must create following registry indices in Elasticsearch, before running Harvest tool or loading data generated by Harvest.
</p>
<ul>
<li><b>registry</b> - this index stores metadata extracted from PDS4 labels, one ES document per PDS label.</li>
<li><b>registry-dd</b> - this index stores data dictionary - a list of searchable fields and its data types.
When registry is created, the data dictionary is populated with fields (attributes) from PDS common and few discipline dictionaries.
You can add more fields as described in <a href="../operate/reg-custom.html#DD">Registry Customization / Data Dictionary</a> section.</li>
<li><b>registry-refs</b> - this index stores product references extracted from collection inventory files.
There could be 1 or more ES documents per inventory file.</li>
</ul>

<p>
To create registry indices in local Elasticsearch (running at <i>http://localhost:9200</i>) 
with 1 shard and 0 replicas, run the following Registry Manager command
</p>
<source>
registry-manager create-registry
</source>

<p>
You can customize <i>create-registry</i> command by passing several parameters, 
such as Elasticsearch URL, number of shards and replicas, authentication parameters.
To see the list of available parameters and basic usage run
<source>
registry-manager create-registry -help
</source>
</p>

<p>
To check that registry indices were created open the following URL in 
a browser: <i>http://localhost:9200/_cat/indices?v</i> or use <i>curl</i>.
</p>
<source>
curl "http://localhost:9200/_cat/indices?v"
</source>

<p>
The response should look similar to this. Make sure that index status is "green". 
</p>
<source>
health status index         uuid                   pri rep docs.count docs.deleted store.size pri.store.size
green  open   registry      PY6ObzELRlSx9gHOWbR8dw   1   0          0            0       208b           208b
green  open   registry-dd   CuJ-nqg1SbKI9hejHrISWA   1   0       2505            0      625kb          625kb
green  open   registry-refs 1cJLc-9cQj2D_MAYo7gOpw   1   0          0            0       208b           208b
</source>

<h4>Registry Data Dictionary</h4>

<p>
When a registry is created, the registry data dictionary is populated with fields (attributes) from 
PDS common and few discipline dictionaries. There are many data dictionaries at 
<a href="https://pds.nasa.gov/datastandards/dictionaries/" target="_blank">PDS website</a> but only
few of them are loaded into Registry by default.
</p>
<p>
You may need to load more data dictionaries as described in <a href="../operate/reg-custom.html">Registry Customization</a> section.
</p>

</subsection>

<!-- ======================================================== -->

<subsection id="harvest" name="Extract metadata from PDS4 labels">
<p>
To extract metadata from PDS4 labels (XML files) you have to use Harvest command-line tool.
Harvest parses PDS4 files and stores extracted metadata in a "newline delimited JSON" data file.
The JSON data file can be loaded into Elasticsearch by Registry Manager.
</p>

<p>
To run Harvest you need an XML configuration file. 
The configuration file has several sections which control which files the Harvest tool 
will crawl and what data to extract. Very basic configuration is shown below.
<source>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;harvest nodeName="PDS_ENG"&gt;
  &lt;registry url="http://localhost:9200" index="registry" /&gt;
  &lt;directories&gt;
    &lt;path&gt;/data/LADEE/ldex_20161118"&lt;/path&gt;
  &lt;/directories&gt;
&lt;/harvest&gt;
</source>
</p>

<p>
You can process bundles or directories. There are few example configuration files in Harvest installation
directory, e.g., <i>harvest-$context.get("harvest.version")/conf/examples/directories.xml</i>.
Either edit one of the example files or use the minimal configuration shown above.
Note that you have to use a valid value of "nodeName" attribute.
</p>

<p>
Update the path with the location of your dataset. 

A sample PDS4 archive is provided in the `test` folder of the <i>pds-registry-app</i> package which you just installed.

IMPORTANT NOTE: don't keep this sample dataset in a production registry. 

More information about Harvest configuration is available in <a href="../operate/harvest.html">Harvest operation documentation</a>.
</p>
	    
<p>
To run Harvest, use <i>harvest</i> command on Unix or <i>harvest.bat</i> on Windows.
The following Unix example uses <i>config.xml</i> configuration file. 
The generated JSON data files will be saved in <i>~/tmp/data1</i> directory.
</p>

<source>
harvest -c /path/to/my/config.xml -o ~/tmp/data1
</source>

<p>
After running Harvest, the output folder (<i>~/tmp/data1</i>) will have several files:
<ul>
<li><i>registry-docs.json</i> - metadata extracted from PDS4 labels, stored in Newline-delimited JSON (NJSON) format.</li>
<li><i>refs-docs.json</i> - product references extracted from collection inventory files.</li>
<li><i>missing_fields.txt</i> - a list of field names extracted from PDS4 labels to be created in the Registry.</li>
<li><i>missing_xsds.txt</i> - a list of XSDs corresponding to fields listed in <i>missing_fields.txt</i> file.</li>
</ul>
</p>

</subsection>


<!-- =================================================================== -->
	
<subsection id="load" name="Load harvested data into Registry (Elasticsearch)">

<p>
JSON files generated by Harvest, can be loaded into Elasticsearch by Registry Manager as shown below. 
</p>

<source>
registry-manager load-data -dir ~/tmp/data1/
</source>

<p>
Where <i>~/tmp/data1/</i> is the Harvest output directory with JSON files.
</p>

<p>
Registry Manager will try updating Registry schema (add more fields) and data dictionary
from <i>missing_fields.txt</i> and <i>missing_xsds.txt</i> files generated by Harvest in <i>~/tmp/data1/</i>.
</p>

<p>
If you try loading JSON data files with fields not defined in the Registry data dictionary,
you will get the following error:
</p>
<source>
[ERROR] Could not find datatype for field '...'
</source>

<p>
You have to update the registry data dictionary as described in <a href="reg-custom.html">Registry Customization</a> section
before you can load the data.
</p>
<p>
You can also use "-force" flag to store all fields missing from the data dictionary as strings.
</p>

</subsection>

<!-- =================================================================== -->
	
<subsection id="query" name="Query Elasticsearch">

<p>
You can query Registry indices in Elasticsearch by calling
<a href="https://www.elastic.co/guide/en/elasticsearch/reference/7.8/search-search.html" target="_blank">Elasticsearch Search API</a>.
</p>



<p>
You can either use simple Lucene queries, passed in the URL:
</p>
<source>
# Select all products
curl "http://localhost:9200/registry/_search?q=*&amp;pretty"

# Select only collections
curl "http://localhost:9200/registry/_search?q=product_class:Product_Collection&amp;pretty"
</source>

<p>
Or more advanced Elasticsearch queries defined in JSON and passed in the request body:
</p>

<source>
curl -X GET "localhost:9200/registry/_search?pretty" -H 'Content-Type: application/json' -d'
{
  "query": {
    "term": {
      "product_class": "Product_Collection"
    }
  }
}
'
</source>

</subsection>

<!-- =================================================================== -->

<subsection id="api" name="Use Registry API">
<h4>Swagger UI</h4>

<p>
Open <i>http://localhost:8080</i> URL in a web browser.
You should see a page similar to this.
</p>

<img src="../images/swagger-ui.png" style="width:50em;" />

<p>
Select an API you want to call, for example <i>collections</i>
</p>

<img src="../images/swagger2.png" style="width:60em;" />

<p>
Select response content type "application/json" from a dropdown and click "Try it out!" button.
You should see JSON response in "Response Body" section of the screen. 
You might need to scroll down to see the results.
</p>

<h4>Curl</h4>

<p>
You can also use <i>curl</i> to call Registry API. For example,
</p>

<source>
curl -X GET --header 'Accept: application/json' 'http://localhost:8000/collections?limit=10'
</source>

</subsection>
	
        
</section>

</body>
</document>
